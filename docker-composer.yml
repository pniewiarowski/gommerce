version: "3.5"


volumes:
  pg-data:
  pg-admin-data:


services:
  database:
    image: postgres:16.1
    container_name: gommerce-database
    restart: unless-stopped
    environment:
      - POSTGRES_DB=gommerce-database
      - POSTGRES_USER=admin
      - POSTGRES_PASSWORD=admin321
    volumes:
      - pg-data:/var/lib/postgresql/data

  database-admin-panel:
    image: dpage/pgadmin4
    container_name: gommerce-database-admin-panel
    restart: unless-stopped
    ports:
      - "1010:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.admin
      PGADMIN_DEFAULT_PASSWORD: password123
    volumes:
      - pg-admin-data:/var/lib/pgadmin

  application-web:
    image: node:21.6
    stdin_open: true
    container_name: gommerce-application-web
    restart: unless-stopped
    build:
      context: "./app"
      dockerfile: "./Dockerfile"
    depends_on:
      - service-account
      - service-shop
      - service-blog

  service-account:
    image: golang:1.21
    stdin_open: true
    container_name: gommerce-service-account
    restart: unless-stopped
    build:
      context: "api/go/account"
      dockerfile: "./Dockerfile"
    depends_on:
      - database

  service-shop:
    image: golang:1.21
    stdin_open: true
    container_name: gommerce-service-shop
    restart: unless-stopped
    build:
      context: "api/go/shop"
      dockerfile: "./Dockerfile"
    depends_on:
      - database

  service-blog:
    image: golang:1.21
    stdin_open: true
    container_name: gommerce-service-blog
    restart: unless-stopped
    build:
      context: "api/go/blog"
      dockerfile: "./Dockerfile"
    depends_on:
      - database

  service-customization:
    image: golang:1.21
    stdin_open: true
    container_name: gommerce-service-customization
    restart: unless-stopped
    build:
      context: "api/go/blog"
      dockerfile: "./Dockerfile"
    depends_on:
      - database